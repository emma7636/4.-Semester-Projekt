@page "/machine_info"
@inject Core.Core core;
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/machine_info.css">
    <title>Machine Info</title>
</head>

<body>
    <div id="wrapper">
        <div class="mci" id="warehouse">
            <h1>Warehouse</h1>
            <h3>State</h3>
            <p>@Warehouse_state</p>
            <h3>Timestamp</h3>
            <p>@Warehouse_timestamp</p>
            <h3>Inventory</h3>
            <p> @Warehouse_Inventory</p>
        </div>

        <div class="mci" id="AGV">
            <h1>AGV</h1>
            <h3>State</h3>
            <p>@AGV_state</p>
            <h3>Battery</h3>
            <p>@AGV_battery</p>
            <h3>Program</h3>
            <p>@AGV_program</p>
            <h3>Timestamp</h3>
            <p>@AGV_timestamp</p>
        </div>

        <div class="mci" id="Assemblystation">
            <h1>Assemblystation</h1>
            <h3>State</h3>
            <p>@Assembly_station_state</p>
            <h3>Current operation</h3>
            <p>@Assembly_station_cOperation</p>
            <h3>Last operation</h3>
            <p>@Assembly_station_lOperation</p>
            <h3>Timestamp</h3>
            <p>@Assembly_station_timestamp</p>
        </div>
    </div>

</body>

</html>


@code {
    [Parameter]
    //Warehouse
    public string Warehouse_state { get; set; } = "";
    public string Warehouse_timestamp { get; set; } = "";
    public string Warehouse_Inventory { get; set; } = "";
    //Assembly station
    public string Assembly_station_state { get; set; } = "";
    public string Assembly_station_lOperation { get; set; } = "";
    public string Assembly_station_cOperation { get; set; } = "";
    public string Assembly_station_timestamp { get; set; } = "";
    //AGV
    public string AGV_state { get; set; } = "";
    public string AGV_battery { get; set; } = "";
    public string AGV_program { get; set; } = "";
    public string AGV_timestamp { get; set; } = "";

    private void update_warehouse()
    {
        //Warehouse_state = core.GetState("Warehouse")["State: "];
        Warehouse_timestamp = core.GetState("Warehouse")["timestamp"];
        // Warehouse_Inventory = core.GetInventory("Warehouse");
    }

    private void update_agv()
    {
        AGV_state = core.GetState("AGV")["state"];
        AGV_battery = core.GetState("AGV")["battery"];
        AGV_program = core.GetState("AGV")["program name"];
        AGV_timestamp = core.GetState("AGV")["timestamp"];
        InvokeAsync(() => StateHasChanged());
    }

    private void update_assembly()
    {
        Assembly_station_state = core.GetState("AssemblyStation")["state"];
        Assembly_station_lOperation = core.GetState("AssemblyStation")["lastOperation"];
        Assembly_station_cOperation = core.GetState("AssemblyStation")["currentOperation"];
        Assembly_station_timestamp = core.GetState("AssemblyStation")["timeStamp"];
        InvokeAsync(() => StateHasChanged());
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
           // InvokeAsync(() => update_warehouse());
            InvokeAsync(() => update_agv());
            InvokeAsync(() => update_assembly());
        }
    }
}